.page_title
  h1
    | Louer
    span<>
      | #{place.name}
    | pour
    span<>
      | #{place.capacity}
    | personnes à
    span<>
      | #{place.building.city}
  .subtitle
    | #{place.description}
  = link_to "Réserver",
    new_bookers_booking_path(place_id: place.id),
    class: "primary_button"

.page_presentation
  .carousel
    - place.place_images.each do |place_image|
      = image_tag(place_image.image.url, height: '300')
  #map

.page_informations
  .informations
    .information_title
      | Caractéristiques de l'établissement mère
    .information_content

  .page_content
    = image_tag "home.png",
      class: "icon"
    p
      | #{place.building.places.count} salles

.page_informations
  .informations
    .information_title
      | Caractéristiques de la salle
    .information_content
      .contents
        = image_tag "meeting.png",
          class: "icon"
        p
          | #{place.capacity} personnes

  .page_content
    = image_tag "dollars.png",
      class: "icon"
    p
      | #{place.unit_price}€ / pers.

.page_notations
  .informations
    .information_title
      | Avis des clients
      span<>
        | (3 derniers)
    .information_content
      - if place.notes.present?
        - place.notes.last(3).each do |note|
          .contents
            .notations
              - note.note.to_i.times do
                = image_tag "star.png",
                  class:"stars"
            .comment
              = note.comment
            .signature
              = note.booker.firstname
      - else
        | Ce lieux n'a pas encore été noté.

  .page_content
    .notations
      - Places::GetPlaceAverageNotationService.call(place: place).times do
        = image_tag "star.png",
          class:"stars"
    p
      | Notation moyenne de la salle



javascript:
  $('.carousel').slick();;
  handler = Gmaps.build('Google');
  handler.buildMap({
    provider: {
      draggable: false,
      keyboardShortcuts: false,
      maxZoom: 15,
      streetViewControl: false,

    },
    internal: {
      id: 'map'
    }
  },
  function(){
    var markers = handler.addCircles(
      [{ lat: (#{place.building.lat} + 0.005),
         lng: (#{place.building.long} + 0.005),
         radius: 300 }],
      { strokeColor: '#FFFFFF'}
    );
    handler.bounds.extendWith(markers);
    handler.fitMapToBounds();
  });
